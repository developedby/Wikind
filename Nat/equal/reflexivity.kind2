Nat.equal.reflexivity
  (x : Nat)
  (y : Nat)
  (h : Equal (Nat.equal x y) Bool.true)
: Equal x y

Nat.equal.reflexivity  Nat.zero     Nat.zero    h = Equal.refl
Nat.equal.reflexivity (Nat.succ x) (Nat.succ y) h =
  let ind = Nat.equal.reflexivity x y h
  Equal.apply (n => Nat.succ n) ind


Nat.equal.reflexivity (Nat.succ x)  Nat.zero    h = Empty.absurd (Bool.false_not_true h)
Nat.equal.reflexivity  Nat.zero    (Nat.succ y) h = Empty.absurd (Bool.false_not_true h)
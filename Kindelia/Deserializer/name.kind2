Kindelia.Deserializer.name: Kindelia.Deserializer U120 {
  do Kindelia.Deserializer {
    ask bits = Kindelia.Deserializer.get_bits
    match Bits bits {
      e => Kindelia.Deserializer.err
      o => 
        do Kindelia.Deserializer {
          ask Kindelia.Deserializer.consume (Bits.o Bits.e)
          ask letters = Kindelia.Deserializer.list (Kindelia.Deserializer.fixlen 6u120)
          let name = Kindelia.Deserializer.name.join letters 0u120
          ask Kindelia.Deserializer.set_name name
          return name
        }
      i => 
        do Kindelia.Deserializer {
          ask Kindelia.Deserializer.consume (Bits.i Bits.e)
          ask id = Kindelia.Deserializer.varlen
          ask name = Kindelia.Deserializer.get_name id
          return name
        }
    }
  }
}

Kindelia.Deserializer.name.join (letters: List U120) (idx: U120): U120 {
  match List letters {
    nil => 0u120
    cons =>
      let six  = 6u120
      let next = Kindelia.Deserializer.name.join letters.tail (U120.add idx 1u120)
      let name = U120.shift_left letters.head (U120.mul six idx)
      let acc  = U120.add next name
      acc
  }
}

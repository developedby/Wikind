// Automatically derived from Bits/Map/_.type
Bits.Map.match <a: Type> (x: (Bits.Map a)) -(p: (x: (Bits.Map a)) Type) (new: (p (Bits.Map.new a))) (tie: (val: (Maybe a)) (lft: (Bits.Map a)) (rgt: (Bits.Map a)) (p (Bits.Map.tie a val lft rgt))) : (p x)
Bits.Map.match a (Bits.Map.new a_) p new tie = (new)
Bits.Map.match a (Bits.Map.tie a_ val_ lft_ rgt_) p new tie = (tie val_ lft_ rgt_)

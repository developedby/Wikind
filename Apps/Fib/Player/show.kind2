// TODO: update to new Player format
#kdl_name = Fib_plr_show
Apps.Fib.Player.show (player: Apps.Fib.Player) : String {
  let list = 
    [
      (Pair.new "Pos x:    " (8u120 )) // (Pair.new (8u120 ) ((v : U120) => (Show.to_string (U120.show v)))))
      (Pair.new "Pos y:    " (8u120 )) // (Pair.new (8u120 ) ((v : U120) => (Show.to_string (U120.show v)))))
      (Pair.new "Exp:      " 12u120) // (Pair.new 12u120 ((v : U120) => (Show.to_string (U120.show v)))))
      (Pair.new "Health:   " 12u120) // (Pair.new 12u120 ((v : U120) => (Show.to_string (U120.show v)))))
      (Pair.new "Offer:    " 16u120) // (Pair.new 16u120 ((v : U120) => (Show.to_string (U120.show v)))))
      (Pair.new "Root:     " (2u120 )) // (Pair.new (2u120 ) ((v : U120) => (Show.to_string (U120.show v)))))
      (Pair.new "Silence:  " (2u120 )) // (Pair.new (2u120 ) ((v : U120) => (Show.to_string (U120.show v)))))
      (Pair.new "Gold:     " 12u120) // (Pair.new 12u120 ((v : U120) => (Show.to_string (U120.show v)))))
      (Pair.new "Cooldown: " 12u120) // (Pair.new 12u120 ((v : U120) => (Show.to_string (U120.show v)))))
      (Pair.new "Skill a:  " (6u120 )) // (Pair.new 12u120 ((v : U120) => (Show.to_string (U120.show v)))))
      (Pair.new "Skill b:  " (6u120 )) // (Pair.new 12u120 ((v : U120) => (Show.to_string (U120.show v)))))
      (Pair.new "Skill c:  " (6u120 )) // (Pair.new 12u120 ((v : U120) => (Show.to_string (U120.show v)))))
      (Pair.new "Skill d:  " (6u120 )) // (Pair.new 12u120 ((v : U120) => (Show.to_string (U120.show v)))))
      (Pair.new "Skill e:  " (6u120 )) // (Pair.new 12u120 ((v : U120) => (Show.to_string (U120.show v)))))
      (Pair.new "Skill f:  " (6u120 )) // (Pair.new 12u120 ((v : U120) => (Show.to_string (U120.show v)))))
    ]
  let func =
    (cur: Pair String U120) =>
    (acc: Pair String U120) =>
      let bit = Pair.snd acc
      let len = Pair.snd cur
      let str = Show.to_string (U120.show (U120.bitwise_and bit (U120.sub (U120.shift_left 1u120 len) 1u120)))
      let str = String.concat (String.concat (Pair.fst acc) (String.cons 10 (Pair.fst cur))) str
      let acc = Pair.new str (U120.shift_right bit len)
      acc
  let acc  = Pair.new String.nil player
  let fold = List.foldl (Pair String U120) (Pair String U120) acc func list
  Pair.fst fold
}

